package it.aminyo.aminyomclib.file.properties;

import dev.aminyo.aminyomclib.core.exceptions.AminyoRuntimeException;
import it.aminyo.aminyomclib.file.FileModel;
import it.aminyo.aminyomclib.file.enums.FileFormat;
import java.io.*;
import java.nio.file.Files;
import java.util.*;

public class PropertiesFileModel extends FileModel {
    private final Properties properties;

    public PropertiesFileModel(String fileName, String dataFolder) throws AminyoRuntimeException {
        super(fileName.endsWith(".properties") ? fileName : fileName + ".properties",
                FileFormat.PROPERTIES, dataFolder);
        this.properties = new Properties();
    }

    @Override
    protected Map<String, Object> loadFromFile() throws IOException {
        properties.clear();
        try (InputStream inputStream = Files.newInputStream(filePath)) {
            properties.load(inputStream);
        }

        Map<String, Object> map = new HashMap<>();
        for (String key : properties.stringPropertyNames()) {
            map.put(key, properties.getProperty(key));
        }
        return map;
    }

    @Override
    protected void saveToFile() throws IOException {
        properties.clear();
        for (Map.Entry<String, Object> entry : data.entrySet()) {
            properties.setProperty(entry.getKey(), String.valueOf(entry.getValue()));
        }

        try (OutputStream outputStream = Files.newOutputStream(filePath)) {
            properties.store(outputStream, "Generated by AminyoMCLib");
        }
    }

    @Override
    protected void createDefaultFile() throws IOException {
        Map<String, Object> defaultData = createDefaultData();
        synchronized (data) {
            data.putAll(defaultData);
        }
        saveToFile();
    }

    protected Map<String, Object> createDefaultData() {
        return new HashMap<>();
    }
}
